@*@model IEnumerable<ProyectoTFI.Entities.Usuario>*@
@model PagedList.IPagedList<ProyectoTFI.Entities.Clase>

@using PagedList.Mvc;

@{ ViewBag.Title = "Clases de curso";
    Layout = "~/Views/Shared/_LayoutInterno.cshtml";

}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Clases de curso</title>
    <link href="~/Scripts/pagedListStyles.css" rel="stylesheet" />
</head>
<body>
    <h4>Clases de curso</h4>
    <hr />
<div style="display: flex; align-items: center;">
    @using (Html.BeginForm("VerClasesCurso", "Curso", FormMethod.Post))
    {

        <div style="margin-left:15px;">
            <div>
                @Html.TextBox("pBusqueda", null, new { placeholder = "Escriba aquí para buscar", style = "width: 210px;" })
                <b>Estado:</b>
                @Html.RadioButton("pTipoUsuario", "Activo", true) <text>Activos</text>
                @Html.RadioButton("pTipoUsuario", "Inactivo") <text>Inactivos</text>
                <input type="submit" value="Buscar" class="btn btn-info" style="color: white; font-weight: bold;" />
                @Html.ActionLink("Agregar", "AgregarClase", "Clase", new { area = "" }, new { @class = "btn", @style = "background-color: blue;color:white;border-color:blue;", @onmouseover = "this.style.backgroundColor='blue';", @onmouseout = "this.style.backgroundColor='white'; this.style.color: blue;" })
            </div>
        </div>
    }
</div>
    <div class="contentTable">
        <table class="table table-hover" aria-describedby="clase" style="padding-top:20px;">
            <thead style="background-color: #ffd800;">
                <tr>
                    <th scope="col" class="col-2 order" style="border: 2px solid #fff;">Descripción</th>
                    <th scope="col" class="col-1 ">Activo</th>
                    <th scope="col" class="col-1" style="border: 2px solid #fff;">Acciones</th>
                </tr>
            </thead>
            <tbody id="bodyTable">
                @if (Model.Count() == 0)
                {
                    <tr>
                        <td colspan="6" class="text-danger fw-bold">No se han encontrado registros</td>
                    </tr>
                }
                else
                {
                    foreach (var clase in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => clase.Descripcion)
                            </td>
                            <td style="text-align: center;">
                            @if ((bool)clase.Activo)
                            {<text>✅</text>}
                            else
                            { <text>❌</text>}
                            </td>
                            <td>
                                <div class="d-flex justify-content-between">
                                    @Html.ActionLink("🔍", "VerClase", "Clase", new { id = clase.ID }, new { @class = "btn btn-primary" })
                                    @Html.ActionLink("✏", "EditarClase", "Clase", new { id = clase.ID }, new { @class = "btn btn-success" })
                                    @if ((bool)clase.Activo == true)
                                    {
                                        @Html.ActionLink("🗑", "BajaClase","Clase", new { id = clase.ID }, new { @class = "btn btn-danger" })
                                    }
                                    else
                                    {@Html.ActionLink("⬆", "RehabilitarClase", "Clase", new { id = clase.ID }, new { @class = "btn btn-danger" })}
                                </div>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        @*Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount*@
        <br />
        @*@Html.PagedListPager(Model, page => Url.Action("VerAdministradores",
            new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))*@
        @Html.PagedListPager(Model, page => Url.Action("VerClasesCuso",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }),
        new PagedListRenderOptions
        {
            LiElementClasses = new[] { "page-item" },
            DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Always,
        })
    </div>
</body>
</html>