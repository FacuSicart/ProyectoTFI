@model ProyectoTFI.Models.UsuarioViewModel

@{
    ViewBag.Title = "Editar Administrador";
    Layout = "~/Views/Shared/_LayoutInterno.cshtml";
    string fechaFormateada = string.Format("{0:dd/MM/yyyy}", Model.FechaNacimiento);
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Editar Administrador</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.Password)
        @Html.HiddenFor(model => model.ConfirmarPassword)

        <div class="" style="background-color: antiquewhite; border-radius:10px;padding:10px;">
            @if (ViewData["ErrorMensaje"] != null)
            {
                <div class="alert alert-danger" role="alert">
                    @ViewData["ErrorMensaje"]
                </div>
            }
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label " })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DNI, htmlAttributes: new { @class = "control-label " })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DNI, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DNI, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FechaNacimiento, htmlAttributes: new { @class = "control-label " })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.FechaNacimiento, new { @type = "date", @class = "form-control datepicker" })
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="row gy-5">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Guardar" id="btnSubmit" class="btn btn-success" />
                        @Html.ActionLink("Reestablecer Contraseña", "ReestablecerPassword", "Admin", new { area = "", id = Model.ID }, new { @class = "btn btn-success" })
                        @Html.ActionLink("Volver", "VerAdministradores", "Admin", new { area = "" }, new { @class = "btn btn-success" })
                    </div>

                </div>
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function() {
        // Inicializa el campo de fecha con el formato DD/MM/AAAA
        var fechaInicial = "@fechaFormateada";

        // Convierte la fecha al formato AAAA-MM-DD para el campo de tipo "date"
        var fechaConvertida = fechaInicial.split('/').reverse().join('-');

        // Asigna la fecha convertida al campo de fecha
        $("#FechaNacimiento").val(fechaConvertida);
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
