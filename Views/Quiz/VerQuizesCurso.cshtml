@*@model IEnumerable<ProyectoTFI.Entities.Usuario>*@
@model PagedList.IPagedList<ProyectoTFI.Entities.Quiz>

@using PagedList.Mvc;

@{ ViewBag.Title = "Quizes del Curso";
    Layout = "~/Views/Shared/_LayoutInterno.cshtml";

}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Quizes del Curso</title>
    <link href="~/Scripts/pagedListStyles.css" rel="stylesheet" />
</head>
<body>
    <h4>Quizes del Curso</h4>
    <h5>Curso: @ViewBag.NombreCurso</h5>
    <hr />
    <div style="display: flex; align-items: center;">
        <div style="border-right: thin solid black;">
            @Html.ActionLink("Volver", "VerClasesCurso", "Curso", new { area = "", id = ViewBag.CursoID, NombreCurso = ViewBag.NombreCurso }, new { @class = "btn btn-success", @style = "color:white;font-weight:bold; margin-right: 10px;" })
            @Html.ActionLink("Agregar", "Agregar", "Quiz", new { area = "", ID = ViewBag.CursoID, NombreCurso = ViewBag.NombreCurso }, new { @class = "btn btn-info", @style = "color:white;font-weight:bold; margin-right: 10px;" })
        </div>
        @using (Html.BeginForm("VerQuizesCurso", "Quiz", FormMethod.Post))
        {
            <input type="hidden" name="NombreCurso" value="@ViewBag.NombreCurso">
            <div style="margin-left:15px;">
                <div>
                    <b>Estado:</b>
                    @Html.RadioButton("pEstado", "Activo", true) <text>Activas</text>
                    @Html.RadioButton("pEstado", "Inactivo") <text>Inactivas</text>
                </div>
                <div>
                    @Html.TextBox("pBusqueda", null, new { placeholder = "Escriba aquí para buscar", style = "width: 210px;" })
                    <input type="submit" value="Buscar" class="btn btn-info" style="color: white; font-weight: bold;" />
                </div>
            </div>
        }
    </div>
    <div class="contentTable">
        <table class="table table-hover" aria-describedby="clase" style="padding-top:20px;">
            <thead style="background-color: #ffd800;">
                <tr>
                    <th scope="col" class="col-2 order" style="border: 2px solid #fff;">ID</th>
                    <th scope="col" class="col-2 order" style="border: 2px solid #fff;">Título</th>
                    <th scope="col" class="col-1 ">Activo</th>
                    <th scope="col" class="col-2 order" style="border: 2px solid #fff;">Clase</th>
                    <th scope="col" class="col-1" style="border: 2px solid #fff;">Acciones</th>
                </tr>
            </thead>
            <tbody id="bodyTable">
                @if (Model.Count() == 0)
                {
                    <tr>
                        <td colspan="6" class="text-danger fw-bold">No se han encontrado registros</td>
                    </tr>
                }
                else
                {
                    foreach (var quiz in Model)
                    {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => quiz.ID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => quiz.Descripcion)
                </td>
                <td style="text-align: center;">
                    @if ((bool)quiz.Activo)
                    {<text>✅</text>}
                else
                { <text>❌</text>}
                </td>
                <td>
                    @Html.DisplayFor(modelItem => quiz.Clase.Titulo)
                </td>
                <td>
                    <div class="d-flex justify-content-between">
                        @Html.ActionLink("🔍", "VerClase", "Clase", new { id = quiz.ID }, new { @class = "btn btn-primary" })
                        @Html.ActionLink("✏", "EditarClase", "Clase", new { id = quiz.ID }, new { @class = "btn btn-success" })
                        @if ((bool)quiz.Activo == true)
                        {
                            @Html.ActionLink("🗑", "BajaClase", "Clase", new { id = quiz.ID }, new { @class = "btn btn-danger" })
                        }
                        else
                        {@Html.ActionLink("⬆", "RehabilitarClase", "Clase", new { id = quiz.ID }, new { @class = "btn btn-danger" })}
                    </div>
                </td>
            </tr>
                    }
                }
            </tbody>
        </table>
        @*Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount*@
        <br />
        @*@Html.PagedListPager(Model, page => Url.Action("VerAdministradores",
            new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))*@
        @Html.PagedListPager(Model, page => Url.Action("VerQuizesCurso",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }),
        new PagedListRenderOptions
        {
            LiElementClasses = new[] { "page-item" },
            DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Always,
        })
    </div>
</body>
</html>